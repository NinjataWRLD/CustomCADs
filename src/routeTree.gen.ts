/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as GuestRouteImport } from './routes/_guest'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as PublicServicesInfoRouteImport } from './routes/_public/services-info'
import { Route as PublicPrivacyPolicyRouteImport } from './routes/_public/privacy-policy'
import { Route as PublicCartRouteImport } from './routes/_public/cart'
import { Route as PublicAccountRouteImport } from './routes/_public/account'
import { Route as GuestResetPasswordRouteImport } from './routes/_guest/reset-password'
import { Route as GuestLoginRouteImport } from './routes/_guest/login'
import { Route as GuestForgotPasswordRouteImport } from './routes/_guest/forgot-password'
import { Route as GuestConfirmEmailRouteImport } from './routes/_guest/confirm-email'
import { Route as privateCustomerRouteImport } from './routes/(private)/_customer'
import { Route as privateCreatorRouteImport } from './routes/(private)/_creator'
import { Route as PublicGalleryIndexRouteImport } from './routes/_public/gallery/index'
import { Route as GuestRegisterIndexRouteImport } from './routes/_guest/register/index'
import { Route as PublicGalleryIdRouteImport } from './routes/_public/gallery/$id'
import { Route as PublicEditorIdRouteImport } from './routes/_public/editor.$id'
import { Route as GuestRetryConfirmEmailUsernameRouteImport } from './routes/_guest/retry-confirm-email.$username'
import { Route as GuestRegisterRoleRouteImport } from './routes/_guest/register/$role'
import { Route as privateCreatorUploadProductRouteImport } from './routes/(private)/_creator/upload-product'
import { Route as privateCustomerShipmentsIndexRouteImport } from './routes/(private)/_customer/shipments/index'
import { Route as privateCustomerCartsIndexRouteImport } from './routes/(private)/_customer/carts/index'
import { Route as privateCustomerCartsPurchaseRouteImport } from './routes/(private)/_customer/carts/purchase'
import { Route as privateCustomerCustomsPurchaseIdRouteImport } from './routes/(private)/_customer/customs/purchase/$id'
import { Route as privateCustomerCartsIdProductIdRouteImport } from './routes/(private)/_customer/carts/$id/$productId'

const privateRouteImport = createFileRoute('/(private)')()

const privateRoute = privateRouteImport.update({
  id: '/(private)',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestRoute = GuestRouteImport.update({
  id: '/_guest',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/_public/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicServicesInfoRoute = PublicServicesInfoRouteImport.update({
  id: '/_public/services-info',
  path: '/services-info',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicPrivacyPolicyRoute = PublicPrivacyPolicyRouteImport.update({
  id: '/_public/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicCartRoute = PublicCartRouteImport.update({
  id: '/_public/cart',
  path: '/cart',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicAccountRoute = PublicAccountRouteImport.update({
  id: '/_public/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestResetPasswordRoute = GuestResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => GuestRoute,
} as any)
const GuestLoginRoute = GuestLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)
const GuestForgotPasswordRoute = GuestForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => GuestRoute,
} as any)
const GuestConfirmEmailRoute = GuestConfirmEmailRouteImport.update({
  id: '/confirm-email',
  path: '/confirm-email',
  getParentRoute: () => GuestRoute,
} as any)
const privateCustomerRoute = privateCustomerRouteImport.update({
  id: '/_customer',
  getParentRoute: () => privateRoute,
} as any)
const privateCreatorRoute = privateCreatorRouteImport.update({
  id: '/_creator',
  getParentRoute: () => privateRoute,
} as any)
const PublicGalleryIndexRoute = PublicGalleryIndexRouteImport.update({
  id: '/_public/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestRegisterIndexRoute = GuestRegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => GuestRoute,
} as any)
const PublicGalleryIdRoute = PublicGalleryIdRouteImport.update({
  id: '/_public/gallery/$id',
  path: '/gallery/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicEditorIdRoute = PublicEditorIdRouteImport.update({
  id: '/_public/editor/$id',
  path: '/editor/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const GuestRetryConfirmEmailUsernameRoute =
  GuestRetryConfirmEmailUsernameRouteImport.update({
    id: '/retry-confirm-email/$username',
    path: '/retry-confirm-email/$username',
    getParentRoute: () => GuestRoute,
  } as any)
const GuestRegisterRoleRoute = GuestRegisterRoleRouteImport.update({
  id: '/register/$role',
  path: '/register/$role',
  getParentRoute: () => GuestRoute,
} as any)
const privateCreatorUploadProductRoute =
  privateCreatorUploadProductRouteImport.update({
    id: '/upload-product',
    path: '/upload-product',
    getParentRoute: () => privateCreatorRoute,
  } as any)
const privateCustomerShipmentsIndexRoute =
  privateCustomerShipmentsIndexRouteImport.update({
    id: '/shipments/',
    path: '/shipments/',
    getParentRoute: () => privateCustomerRoute,
  } as any)
const privateCustomerCartsIndexRoute =
  privateCustomerCartsIndexRouteImport.update({
    id: '/carts/',
    path: '/carts/',
    getParentRoute: () => privateCustomerRoute,
  } as any)
const privateCustomerCartsPurchaseRoute =
  privateCustomerCartsPurchaseRouteImport.update({
    id: '/carts/purchase',
    path: '/carts/purchase',
    getParentRoute: () => privateCustomerRoute,
  } as any)
const privateCustomerCustomsPurchaseIdRoute =
  privateCustomerCustomsPurchaseIdRouteImport.update({
    id: '/customs/purchase/$id',
    path: '/customs/purchase/$id',
    getParentRoute: () => privateCustomerRoute,
  } as any)
const privateCustomerCartsIdProductIdRoute =
  privateCustomerCartsIdProductIdRouteImport.update({
    id: '/carts/$id/$productId',
    path: '/carts/$id/$productId',
    getParentRoute: () => privateCustomerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof PublicIndexRoute
  '/confirm-email': typeof GuestConfirmEmailRoute
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/login': typeof GuestLoginRoute
  '/reset-password': typeof GuestResetPasswordRoute
  '/account': typeof PublicAccountRoute
  '/cart': typeof PublicCartRoute
  '/privacy-policy': typeof PublicPrivacyPolicyRoute
  '/services-info': typeof PublicServicesInfoRoute
  '/upload-product': typeof privateCreatorUploadProductRoute
  '/register/$role': typeof GuestRegisterRoleRoute
  '/retry-confirm-email/$username': typeof GuestRetryConfirmEmailUsernameRoute
  '/editor/$id': typeof PublicEditorIdRoute
  '/gallery/$id': typeof PublicGalleryIdRoute
  '/register': typeof GuestRegisterIndexRoute
  '/gallery': typeof PublicGalleryIndexRoute
  '/carts/purchase': typeof privateCustomerCartsPurchaseRoute
  '/carts': typeof privateCustomerCartsIndexRoute
  '/shipments': typeof privateCustomerShipmentsIndexRoute
  '/carts/$id/$productId': typeof privateCustomerCartsIdProductIdRoute
  '/customs/purchase/$id': typeof privateCustomerCustomsPurchaseIdRoute
}
export interface FileRoutesByTo {
  '/': typeof PublicIndexRoute
  '/confirm-email': typeof GuestConfirmEmailRoute
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/login': typeof GuestLoginRoute
  '/reset-password': typeof GuestResetPasswordRoute
  '/account': typeof PublicAccountRoute
  '/cart': typeof PublicCartRoute
  '/privacy-policy': typeof PublicPrivacyPolicyRoute
  '/services-info': typeof PublicServicesInfoRoute
  '/upload-product': typeof privateCreatorUploadProductRoute
  '/register/$role': typeof GuestRegisterRoleRoute
  '/retry-confirm-email/$username': typeof GuestRetryConfirmEmailUsernameRoute
  '/editor/$id': typeof PublicEditorIdRoute
  '/gallery/$id': typeof PublicGalleryIdRoute
  '/register': typeof GuestRegisterIndexRoute
  '/gallery': typeof PublicGalleryIndexRoute
  '/carts/purchase': typeof privateCustomerCartsPurchaseRoute
  '/carts': typeof privateCustomerCartsIndexRoute
  '/shipments': typeof privateCustomerShipmentsIndexRoute
  '/carts/$id/$productId': typeof privateCustomerCartsIdProductIdRoute
  '/customs/purchase/$id': typeof privateCustomerCustomsPurchaseIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_guest': typeof GuestRouteWithChildren
  '/(private)': typeof privateRouteWithChildren
  '/(private)/_creator': typeof privateCreatorRouteWithChildren
  '/(private)/_customer': typeof privateCustomerRouteWithChildren
  '/_guest/confirm-email': typeof GuestConfirmEmailRoute
  '/_guest/forgot-password': typeof GuestForgotPasswordRoute
  '/_guest/login': typeof GuestLoginRoute
  '/_guest/reset-password': typeof GuestResetPasswordRoute
  '/_public/account': typeof PublicAccountRoute
  '/_public/cart': typeof PublicCartRoute
  '/_public/privacy-policy': typeof PublicPrivacyPolicyRoute
  '/_public/services-info': typeof PublicServicesInfoRoute
  '/_public/': typeof PublicIndexRoute
  '/(private)/_creator/upload-product': typeof privateCreatorUploadProductRoute
  '/_guest/register/$role': typeof GuestRegisterRoleRoute
  '/_guest/retry-confirm-email/$username': typeof GuestRetryConfirmEmailUsernameRoute
  '/_public/editor/$id': typeof PublicEditorIdRoute
  '/_public/gallery/$id': typeof PublicGalleryIdRoute
  '/_guest/register/': typeof GuestRegisterIndexRoute
  '/_public/gallery/': typeof PublicGalleryIndexRoute
  '/(private)/_customer/carts/purchase': typeof privateCustomerCartsPurchaseRoute
  '/(private)/_customer/carts/': typeof privateCustomerCartsIndexRoute
  '/(private)/_customer/shipments/': typeof privateCustomerShipmentsIndexRoute
  '/(private)/_customer/carts/$id/$productId': typeof privateCustomerCartsIdProductIdRoute
  '/(private)/_customer/customs/purchase/$id': typeof privateCustomerCustomsPurchaseIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/confirm-email'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/account'
    | '/cart'
    | '/privacy-policy'
    | '/services-info'
    | '/upload-product'
    | '/register/$role'
    | '/retry-confirm-email/$username'
    | '/editor/$id'
    | '/gallery/$id'
    | '/register'
    | '/gallery'
    | '/carts/purchase'
    | '/carts'
    | '/shipments'
    | '/carts/$id/$productId'
    | '/customs/purchase/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/confirm-email'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/account'
    | '/cart'
    | '/privacy-policy'
    | '/services-info'
    | '/upload-product'
    | '/register/$role'
    | '/retry-confirm-email/$username'
    | '/editor/$id'
    | '/gallery/$id'
    | '/register'
    | '/gallery'
    | '/carts/purchase'
    | '/carts'
    | '/shipments'
    | '/carts/$id/$productId'
    | '/customs/purchase/$id'
  id:
    | '__root__'
    | '/_guest'
    | '/(private)'
    | '/(private)/_creator'
    | '/(private)/_customer'
    | '/_guest/confirm-email'
    | '/_guest/forgot-password'
    | '/_guest/login'
    | '/_guest/reset-password'
    | '/_public/account'
    | '/_public/cart'
    | '/_public/privacy-policy'
    | '/_public/services-info'
    | '/_public/'
    | '/(private)/_creator/upload-product'
    | '/_guest/register/$role'
    | '/_guest/retry-confirm-email/$username'
    | '/_public/editor/$id'
    | '/_public/gallery/$id'
    | '/_guest/register/'
    | '/_public/gallery/'
    | '/(private)/_customer/carts/purchase'
    | '/(private)/_customer/carts/'
    | '/(private)/_customer/shipments/'
    | '/(private)/_customer/carts/$id/$productId'
    | '/(private)/_customer/customs/purchase/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  GuestRoute: typeof GuestRouteWithChildren
  privateRoute: typeof privateRouteWithChildren
  PublicAccountRoute: typeof PublicAccountRoute
  PublicCartRoute: typeof PublicCartRoute
  PublicPrivacyPolicyRoute: typeof PublicPrivacyPolicyRoute
  PublicServicesInfoRoute: typeof PublicServicesInfoRoute
  PublicIndexRoute: typeof PublicIndexRoute
  PublicEditorIdRoute: typeof PublicEditorIdRoute
  PublicGalleryIdRoute: typeof PublicGalleryIdRoute
  PublicGalleryIndexRoute: typeof PublicGalleryIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(private)': {
      id: '/(private)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/services-info': {
      id: '/_public/services-info'
      path: '/services-info'
      fullPath: '/services-info'
      preLoaderRoute: typeof PublicServicesInfoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/privacy-policy': {
      id: '/_public/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PublicPrivacyPolicyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/cart': {
      id: '/_public/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof PublicCartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/account': {
      id: '/_public/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof PublicAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/reset-password': {
      id: '/_guest/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof GuestResetPasswordRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/forgot-password': {
      id: '/_guest/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof GuestForgotPasswordRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/confirm-email': {
      id: '/_guest/confirm-email'
      path: '/confirm-email'
      fullPath: '/confirm-email'
      preLoaderRoute: typeof GuestConfirmEmailRouteImport
      parentRoute: typeof GuestRoute
    }
    '/(private)/_customer': {
      id: '/(private)/_customer'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof privateCustomerRouteImport
      parentRoute: typeof privateRoute
    }
    '/(private)/_creator': {
      id: '/(private)/_creator'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateCreatorRouteImport
      parentRoute: typeof privateRoute
    }
    '/_public/gallery/': {
      id: '/_public/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof PublicGalleryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/register/': {
      id: '/_guest/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof GuestRegisterIndexRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_public/gallery/$id': {
      id: '/_public/gallery/$id'
      path: '/gallery/$id'
      fullPath: '/gallery/$id'
      preLoaderRoute: typeof PublicGalleryIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/editor/$id': {
      id: '/_public/editor/$id'
      path: '/editor/$id'
      fullPath: '/editor/$id'
      preLoaderRoute: typeof PublicEditorIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_guest/retry-confirm-email/$username': {
      id: '/_guest/retry-confirm-email/$username'
      path: '/retry-confirm-email/$username'
      fullPath: '/retry-confirm-email/$username'
      preLoaderRoute: typeof GuestRetryConfirmEmailUsernameRouteImport
      parentRoute: typeof GuestRoute
    }
    '/_guest/register/$role': {
      id: '/_guest/register/$role'
      path: '/register/$role'
      fullPath: '/register/$role'
      preLoaderRoute: typeof GuestRegisterRoleRouteImport
      parentRoute: typeof GuestRoute
    }
    '/(private)/_creator/upload-product': {
      id: '/(private)/_creator/upload-product'
      path: '/upload-product'
      fullPath: '/upload-product'
      preLoaderRoute: typeof privateCreatorUploadProductRouteImport
      parentRoute: typeof privateCreatorRoute
    }
    '/(private)/_customer/shipments/': {
      id: '/(private)/_customer/shipments/'
      path: '/shipments'
      fullPath: '/shipments'
      preLoaderRoute: typeof privateCustomerShipmentsIndexRouteImport
      parentRoute: typeof privateCustomerRoute
    }
    '/(private)/_customer/carts/': {
      id: '/(private)/_customer/carts/'
      path: '/carts'
      fullPath: '/carts'
      preLoaderRoute: typeof privateCustomerCartsIndexRouteImport
      parentRoute: typeof privateCustomerRoute
    }
    '/(private)/_customer/carts/purchase': {
      id: '/(private)/_customer/carts/purchase'
      path: '/carts/purchase'
      fullPath: '/carts/purchase'
      preLoaderRoute: typeof privateCustomerCartsPurchaseRouteImport
      parentRoute: typeof privateCustomerRoute
    }
    '/(private)/_customer/customs/purchase/$id': {
      id: '/(private)/_customer/customs/purchase/$id'
      path: '/customs/purchase/$id'
      fullPath: '/customs/purchase/$id'
      preLoaderRoute: typeof privateCustomerCustomsPurchaseIdRouteImport
      parentRoute: typeof privateCustomerRoute
    }
    '/(private)/_customer/carts/$id/$productId': {
      id: '/(private)/_customer/carts/$id/$productId'
      path: '/carts/$id/$productId'
      fullPath: '/carts/$id/$productId'
      preLoaderRoute: typeof privateCustomerCartsIdProductIdRouteImport
      parentRoute: typeof privateCustomerRoute
    }
  }
}

interface GuestRouteChildren {
  GuestConfirmEmailRoute: typeof GuestConfirmEmailRoute
  GuestForgotPasswordRoute: typeof GuestForgotPasswordRoute
  GuestLoginRoute: typeof GuestLoginRoute
  GuestResetPasswordRoute: typeof GuestResetPasswordRoute
  GuestRegisterRoleRoute: typeof GuestRegisterRoleRoute
  GuestRetryConfirmEmailUsernameRoute: typeof GuestRetryConfirmEmailUsernameRoute
  GuestRegisterIndexRoute: typeof GuestRegisterIndexRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestConfirmEmailRoute: GuestConfirmEmailRoute,
  GuestForgotPasswordRoute: GuestForgotPasswordRoute,
  GuestLoginRoute: GuestLoginRoute,
  GuestResetPasswordRoute: GuestResetPasswordRoute,
  GuestRegisterRoleRoute: GuestRegisterRoleRoute,
  GuestRetryConfirmEmailUsernameRoute: GuestRetryConfirmEmailUsernameRoute,
  GuestRegisterIndexRoute: GuestRegisterIndexRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

interface privateCreatorRouteChildren {
  privateCreatorUploadProductRoute: typeof privateCreatorUploadProductRoute
}

const privateCreatorRouteChildren: privateCreatorRouteChildren = {
  privateCreatorUploadProductRoute: privateCreatorUploadProductRoute,
}

const privateCreatorRouteWithChildren = privateCreatorRoute._addFileChildren(
  privateCreatorRouteChildren,
)

interface privateCustomerRouteChildren {
  privateCustomerCartsPurchaseRoute: typeof privateCustomerCartsPurchaseRoute
  privateCustomerCartsIndexRoute: typeof privateCustomerCartsIndexRoute
  privateCustomerShipmentsIndexRoute: typeof privateCustomerShipmentsIndexRoute
  privateCustomerCartsIdProductIdRoute: typeof privateCustomerCartsIdProductIdRoute
  privateCustomerCustomsPurchaseIdRoute: typeof privateCustomerCustomsPurchaseIdRoute
}

const privateCustomerRouteChildren: privateCustomerRouteChildren = {
  privateCustomerCartsPurchaseRoute: privateCustomerCartsPurchaseRoute,
  privateCustomerCartsIndexRoute: privateCustomerCartsIndexRoute,
  privateCustomerShipmentsIndexRoute: privateCustomerShipmentsIndexRoute,
  privateCustomerCartsIdProductIdRoute: privateCustomerCartsIdProductIdRoute,
  privateCustomerCustomsPurchaseIdRoute: privateCustomerCustomsPurchaseIdRoute,
}

const privateCustomerRouteWithChildren = privateCustomerRoute._addFileChildren(
  privateCustomerRouteChildren,
)

interface privateRouteChildren {
  privateCreatorRoute: typeof privateCreatorRouteWithChildren
  privateCustomerRoute: typeof privateCustomerRouteWithChildren
}

const privateRouteChildren: privateRouteChildren = {
  privateCreatorRoute: privateCreatorRouteWithChildren,
  privateCustomerRoute: privateCustomerRouteWithChildren,
}

const privateRouteWithChildren =
  privateRoute._addFileChildren(privateRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  GuestRoute: GuestRouteWithChildren,
  privateRoute: privateRouteWithChildren,
  PublicAccountRoute: PublicAccountRoute,
  PublicCartRoute: PublicCartRoute,
  PublicPrivacyPolicyRoute: PublicPrivacyPolicyRoute,
  PublicServicesInfoRoute: PublicServicesInfoRoute,
  PublicIndexRoute: PublicIndexRoute,
  PublicEditorIdRoute: PublicEditorIdRoute,
  PublicGalleryIdRoute: PublicGalleryIdRoute,
  PublicGalleryIndexRoute: PublicGalleryIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
