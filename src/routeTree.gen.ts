/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestImport } from './routes/_guest'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as PublicServicesInfoImport } from './routes/_public/services-info'
import { Route as PublicPrivacyPolicyImport } from './routes/_public/privacy-policy'
import { Route as PublicCartImport } from './routes/_public/cart'
import { Route as GuestResetPasswordImport } from './routes/_guest/reset-password'
import { Route as GuestLoginImport } from './routes/_guest/login'
import { Route as GuestForgotPasswordImport } from './routes/_guest/forgot-password'
import { Route as privateCreatorImport } from './routes/(private)/_creator'
import { Route as PublicGalleryIndexImport } from './routes/_public/gallery/index'
import { Route as GuestRegisterIndexImport } from './routes/_guest/register/index'
import { Route as PublicGalleryIdImport } from './routes/_public/gallery/$id'
import { Route as PublicEditorIdImport } from './routes/_public/editor.$id'
import { Route as GuestRegisterRoleImport } from './routes/_guest/register/$role'
import { Route as privateCreatorUploadProductImport } from './routes/(private)/_creator/upload-product'

// Create Virtual Routes

const privateImport = createFileRoute('/(private)')()

// Create/Update Routes

const privateRoute = privateImport.update({
  id: '/(private)',
  getParentRoute: () => rootRoute,
} as any)

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/_public/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PublicServicesInfoRoute = PublicServicesInfoImport.update({
  id: '/_public/services-info',
  path: '/services-info',
  getParentRoute: () => rootRoute,
} as any)

const PublicPrivacyPolicyRoute = PublicPrivacyPolicyImport.update({
  id: '/_public/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const PublicCartRoute = PublicCartImport.update({
  id: '/_public/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const GuestResetPasswordRoute = GuestResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => GuestRoute,
} as any)

const GuestLoginRoute = GuestLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)

const GuestForgotPasswordRoute = GuestForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => GuestRoute,
} as any)

const privateCreatorRoute = privateCreatorImport.update({
  id: '/_creator',
  getParentRoute: () => privateRoute,
} as any)

const PublicGalleryIndexRoute = PublicGalleryIndexImport.update({
  id: '/_public/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRoute,
} as any)

const GuestRegisterIndexRoute = GuestRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => GuestRoute,
} as any)

const PublicGalleryIdRoute = PublicGalleryIdImport.update({
  id: '/_public/gallery/$id',
  path: '/gallery/$id',
  getParentRoute: () => rootRoute,
} as any)

const PublicEditorIdRoute = PublicEditorIdImport.update({
  id: '/_public/editor/$id',
  path: '/editor/$id',
  getParentRoute: () => rootRoute,
} as any)

const GuestRegisterRoleRoute = GuestRegisterRoleImport.update({
  id: '/register/$role',
  path: '/register/$role',
  getParentRoute: () => GuestRoute,
} as any)

const privateCreatorUploadProductRoute =
  privateCreatorUploadProductImport.update({
    id: '/upload-product',
    path: '/upload-product',
    getParentRoute: () => privateCreatorRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/(private)': {
      id: '/(private)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateImport
      parentRoute: typeof rootRoute
    }
    '/(private)/_creator': {
      id: '/(private)/_creator'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateCreatorImport
      parentRoute: typeof privateRoute
    }
    '/_guest/forgot-password': {
      id: '/_guest/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof GuestForgotPasswordImport
      parentRoute: typeof GuestImport
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginImport
      parentRoute: typeof GuestImport
    }
    '/_guest/reset-password': {
      id: '/_guest/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof GuestResetPasswordImport
      parentRoute: typeof GuestImport
    }
    '/_public/cart': {
      id: '/_public/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof PublicCartImport
      parentRoute: typeof rootRoute
    }
    '/_public/privacy-policy': {
      id: '/_public/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PublicPrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/_public/services-info': {
      id: '/_public/services-info'
      path: '/services-info'
      fullPath: '/services-info'
      preLoaderRoute: typeof PublicServicesInfoImport
      parentRoute: typeof rootRoute
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof rootRoute
    }
    '/(private)/_creator/upload-product': {
      id: '/(private)/_creator/upload-product'
      path: '/upload-product'
      fullPath: '/upload-product'
      preLoaderRoute: typeof privateCreatorUploadProductImport
      parentRoute: typeof privateCreatorImport
    }
    '/_guest/register/$role': {
      id: '/_guest/register/$role'
      path: '/register/$role'
      fullPath: '/register/$role'
      preLoaderRoute: typeof GuestRegisterRoleImport
      parentRoute: typeof GuestImport
    }
    '/_public/editor/$id': {
      id: '/_public/editor/$id'
      path: '/editor/$id'
      fullPath: '/editor/$id'
      preLoaderRoute: typeof PublicEditorIdImport
      parentRoute: typeof rootRoute
    }
    '/_public/gallery/$id': {
      id: '/_public/gallery/$id'
      path: '/gallery/$id'
      fullPath: '/gallery/$id'
      preLoaderRoute: typeof PublicGalleryIdImport
      parentRoute: typeof rootRoute
    }
    '/_guest/register/': {
      id: '/_guest/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof GuestRegisterIndexImport
      parentRoute: typeof GuestImport
    }
    '/_public/gallery/': {
      id: '/_public/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof PublicGalleryIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface GuestRouteChildren {
  GuestForgotPasswordRoute: typeof GuestForgotPasswordRoute
  GuestLoginRoute: typeof GuestLoginRoute
  GuestResetPasswordRoute: typeof GuestResetPasswordRoute
  GuestRegisterRoleRoute: typeof GuestRegisterRoleRoute
  GuestRegisterIndexRoute: typeof GuestRegisterIndexRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestForgotPasswordRoute: GuestForgotPasswordRoute,
  GuestLoginRoute: GuestLoginRoute,
  GuestResetPasswordRoute: GuestResetPasswordRoute,
  GuestRegisterRoleRoute: GuestRegisterRoleRoute,
  GuestRegisterIndexRoute: GuestRegisterIndexRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

interface privateCreatorRouteChildren {
  privateCreatorUploadProductRoute: typeof privateCreatorUploadProductRoute
}

const privateCreatorRouteChildren: privateCreatorRouteChildren = {
  privateCreatorUploadProductRoute: privateCreatorUploadProductRoute,
}

const privateCreatorRouteWithChildren = privateCreatorRoute._addFileChildren(
  privateCreatorRouteChildren,
)

interface privateRouteChildren {
  privateCreatorRoute: typeof privateCreatorRouteWithChildren
}

const privateRouteChildren: privateRouteChildren = {
  privateCreatorRoute: privateCreatorRouteWithChildren,
}

const privateRouteWithChildren =
  privateRoute._addFileChildren(privateRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof GuestRouteWithChildren
  '/': typeof PublicIndexRoute
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/login': typeof GuestLoginRoute
  '/reset-password': typeof GuestResetPasswordRoute
  '/cart': typeof PublicCartRoute
  '/privacy-policy': typeof PublicPrivacyPolicyRoute
  '/services-info': typeof PublicServicesInfoRoute
  '/upload-product': typeof privateCreatorUploadProductRoute
  '/register/$role': typeof GuestRegisterRoleRoute
  '/editor/$id': typeof PublicEditorIdRoute
  '/gallery/$id': typeof PublicGalleryIdRoute
  '/register': typeof GuestRegisterIndexRoute
  '/gallery': typeof PublicGalleryIndexRoute
}

export interface FileRoutesByTo {
  '': typeof GuestRouteWithChildren
  '/': typeof PublicIndexRoute
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/login': typeof GuestLoginRoute
  '/reset-password': typeof GuestResetPasswordRoute
  '/cart': typeof PublicCartRoute
  '/privacy-policy': typeof PublicPrivacyPolicyRoute
  '/services-info': typeof PublicServicesInfoRoute
  '/upload-product': typeof privateCreatorUploadProductRoute
  '/register/$role': typeof GuestRegisterRoleRoute
  '/editor/$id': typeof PublicEditorIdRoute
  '/gallery/$id': typeof PublicGalleryIdRoute
  '/register': typeof GuestRegisterIndexRoute
  '/gallery': typeof PublicGalleryIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_guest': typeof GuestRouteWithChildren
  '/(private)': typeof privateRouteWithChildren
  '/(private)/_creator': typeof privateCreatorRouteWithChildren
  '/_guest/forgot-password': typeof GuestForgotPasswordRoute
  '/_guest/login': typeof GuestLoginRoute
  '/_guest/reset-password': typeof GuestResetPasswordRoute
  '/_public/cart': typeof PublicCartRoute
  '/_public/privacy-policy': typeof PublicPrivacyPolicyRoute
  '/_public/services-info': typeof PublicServicesInfoRoute
  '/_public/': typeof PublicIndexRoute
  '/(private)/_creator/upload-product': typeof privateCreatorUploadProductRoute
  '/_guest/register/$role': typeof GuestRegisterRoleRoute
  '/_public/editor/$id': typeof PublicEditorIdRoute
  '/_public/gallery/$id': typeof PublicGalleryIdRoute
  '/_guest/register/': typeof GuestRegisterIndexRoute
  '/_public/gallery/': typeof PublicGalleryIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/cart'
    | '/privacy-policy'
    | '/services-info'
    | '/upload-product'
    | '/register/$role'
    | '/editor/$id'
    | '/gallery/$id'
    | '/register'
    | '/gallery'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/cart'
    | '/privacy-policy'
    | '/services-info'
    | '/upload-product'
    | '/register/$role'
    | '/editor/$id'
    | '/gallery/$id'
    | '/register'
    | '/gallery'
  id:
    | '__root__'
    | '/_guest'
    | '/(private)'
    | '/(private)/_creator'
    | '/_guest/forgot-password'
    | '/_guest/login'
    | '/_guest/reset-password'
    | '/_public/cart'
    | '/_public/privacy-policy'
    | '/_public/services-info'
    | '/_public/'
    | '/(private)/_creator/upload-product'
    | '/_guest/register/$role'
    | '/_public/editor/$id'
    | '/_public/gallery/$id'
    | '/_guest/register/'
    | '/_public/gallery/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  GuestRoute: typeof GuestRouteWithChildren
  privateRoute: typeof privateRouteWithChildren
  PublicCartRoute: typeof PublicCartRoute
  PublicPrivacyPolicyRoute: typeof PublicPrivacyPolicyRoute
  PublicServicesInfoRoute: typeof PublicServicesInfoRoute
  PublicIndexRoute: typeof PublicIndexRoute
  PublicEditorIdRoute: typeof PublicEditorIdRoute
  PublicGalleryIdRoute: typeof PublicGalleryIdRoute
  PublicGalleryIndexRoute: typeof PublicGalleryIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  GuestRoute: GuestRouteWithChildren,
  privateRoute: privateRouteWithChildren,
  PublicCartRoute: PublicCartRoute,
  PublicPrivacyPolicyRoute: PublicPrivacyPolicyRoute,
  PublicServicesInfoRoute: PublicServicesInfoRoute,
  PublicIndexRoute: PublicIndexRoute,
  PublicEditorIdRoute: PublicEditorIdRoute,
  PublicGalleryIdRoute: PublicGalleryIdRoute,
  PublicGalleryIndexRoute: PublicGalleryIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_guest",
        "/(private)",
        "/_public/cart",
        "/_public/privacy-policy",
        "/_public/services-info",
        "/_public/",
        "/_public/editor/$id",
        "/_public/gallery/$id",
        "/_public/gallery/"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/forgot-password",
        "/_guest/login",
        "/_guest/reset-password",
        "/_guest/register/$role",
        "/_guest/register/"
      ]
    },
    "/(private)": {
      "filePath": "(private)",
      "children": [
        "/(private)/_creator"
      ]
    },
    "/(private)/_creator": {
      "filePath": "(private)/_creator.tsx",
      "parent": "/(private)",
      "children": [
        "/(private)/_creator/upload-product"
      ]
    },
    "/_guest/forgot-password": {
      "filePath": "_guest/forgot-password.tsx",
      "parent": "/_guest"
    },
    "/_guest/login": {
      "filePath": "_guest/login.tsx",
      "parent": "/_guest"
    },
    "/_guest/reset-password": {
      "filePath": "_guest/reset-password.tsx",
      "parent": "/_guest"
    },
    "/_public/cart": {
      "filePath": "_public/cart.tsx"
    },
    "/_public/privacy-policy": {
      "filePath": "_public/privacy-policy.tsx"
    },
    "/_public/services-info": {
      "filePath": "_public/services-info.tsx"
    },
    "/_public/": {
      "filePath": "_public/index.tsx"
    },
    "/(private)/_creator/upload-product": {
      "filePath": "(private)/_creator/upload-product.tsx",
      "parent": "/(private)/_creator"
    },
    "/_guest/register/$role": {
      "filePath": "_guest/register/$role.tsx",
      "parent": "/_guest"
    },
    "/_public/editor/$id": {
      "filePath": "_public/editor.$id.tsx"
    },
    "/_public/gallery/$id": {
      "filePath": "_public/gallery/$id.tsx"
    },
    "/_guest/register/": {
      "filePath": "_guest/register/index.tsx",
      "parent": "/_guest"
    },
    "/_public/gallery/": {
      "filePath": "_public/gallery/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
